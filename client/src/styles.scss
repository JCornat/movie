@mixin variable($property, $variable, $fallback) {
  #{$property}: $fallback;
  #{$property}: $variable;
}

@mixin borderRadius($radius: 8px) {
  border-radius: $radius;
}

@mixin borderRadiusBottom($radius: 8px) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin borderRadiusTop($radius: 8px) {
  border-top-left-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin text-ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@import 'assets/styles/variable';
@import 'assets/styles/reset';
@import 'assets/styles/base';
@import 'assets/styles/box';
@import 'assets/styles/flex';
@import 'assets/styles/form';
@import 'assets/styles/generated/icon';

@include build-margin();
@include build-padding();

:root {
  --movie-width: 200px;

  --presentation-media-width: 200px;
  --presentation-media-height: calc(var(--presentation-media-width) * 1.5);
}

@media (max-width: $minMedium) {
  :root {
    --movie-width: 180px;
    --presentation-media-width: 175px;
  }
}

@media (max-width: $minSmall) {
  :root {
    --movie-width: 160px;
    --presentation-media-width: 125px;
  }
}

.cursor-pointer {
  cursor: pointer;
}

.presentation {
  cursor: pointer;
  height: calc(var(--presentation-media-height) * 2);
  display: flex;
  align-items: center;
  position: relative;
  background: rgb(18, 18, 18);
  background: linear-gradient(90deg, rgba(18, 18, 18, 1) 25%, rgba(18, 18, 18, 0.7) 50%, rgba(18, 18, 18, 0.1) 100%);
  margin-bottom: 16px;
  overflow: hidden;

  .text {
    padding-left: 100px;

    .title {
      text-shadow: 0 0 5px rgba(0, 212, 252, 0.8);
      font-size: 30px;
      font-weight: 700;
      letter-spacing: -1;
    }

    .description {
      opacity: 0.5;
      font-size: 20px;
      font-weight: 500;
    }

    .more {
      margin-top: 16px;
      font-size: 17px;
      font-weight: 700;
      opacity: 0.8;

      i {
        opacity: 0.4;
        position: relative;
        top: 5px;
      }
    }
  }

  .background {
    z-index: -1;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--presentation-media-width), 1fr));

    .poster {
      height: var(--presentation-media-height);
      width: 100%;
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;

      &:before {
        content: "";
      }
    }
  }

  @media (max-width: $minMedium) {
    background: linear-gradient(90deg, rgba(18, 18, 18, 1) 50%, rgba(18, 18, 18, 0.7) 75%, rgba(18, 18, 18, 0.5) 100%);

    .text {
      padding-left: 50px;
    }
  }

  @media (max-width: $minSmall) {
    background: linear-gradient(90deg, rgba(18, 18, 18, 1) 50%, rgba(18, 18, 18, 0.7) 75%, rgba(18, 18, 18, 0.7) 100%);

    .text {
      padding-left: 16px;
      padding-right: 16px;
    }
  }
}

.media-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(var(--movie-width), 1fr));
  grid-gap: 16px;
  padding: 16px;
}

.media {
  position: relative;
  display: block;
  width: 100%;

  .poster-container {
    border-radius: 8px;
    box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);;
    margin-bottom: 12px;
    overflow: hidden;

    .poster {
      display: block;
      width: 100%;
      aspect-ratio: 2/3;

      &:before {
        content: "";
      }

      picture {
        display: block;
        position: relative;
        width: 100%;
        height: 100%;

        img {
          object-fit: cover;
        }
      }
    }
  }

  .content {
    @include variable(color, rgb(var(--on-background)), #000);
    text-shadow: 0 0 10px #000;
    text-align: center;
  }

  &.blur {
    .poster {
      filter: blur(8px);
      -webkit-filter: blur(8px);
    }

    .content {
      position: absolute;
      left: 0;
      right: 0;
      top: 40%;
      text-shadow: 0 2px 2px #000;
    }
  }
}

.thin {
  font-weight: $thin;
}

.light {
  font-weight: $light;
}

.regular {
  font-weight: $regular;
}

.media {
  font-weight: $medium;
}

.bold {
  font-weight: $bold;
}

.text-sm {
  font-size: $captionSize;
}

.text-base {
  font-size: $bodySize;
}

.text-lg {
  font-size: $subheadingSize;
}

.text-xl {
  font-size: 25px;
}

.weightBlack {
  font-weight: $weightBlack;
}

@for $i from 0 through 10 {
  .opacity-#{$i} {
    opacity: calc($i / 10);
  }
}

.navigation {
  display: flex;
  align-items: center;
  margin: 16px;

  .link {
    display: flex;
  }

  .search {
    display: flex;
    justify-content: end;
    flex: 1;
    position: relative;
  }

  @media (max-width: $minMedium) {
    flex-direction: column;

    .link {
      margin-bottom: 12px;
    }

    .search {
      width: 100%;

      form {
        input {
          max-width: 100%;
        }
      }
    }
  }
}

form {
  display: contents;

  input, select {
    vertical-align: middle;
    height: 36px;
    max-height: 36px;
    border-width: 1px;
    border-style: solid;
    padding: 0 8px 0 16px;
    transition: width $transitionDuration $transitionCurve;
    width: 100%;
    outline: 0;
    max-width: 400px;
    font-size: $bodySize;
    background: transparent;
    @include variable(color, rgba(var(--on-surface), 0.8), #fff);
    @include variable(border-color, rgba(var(--on-surface), 0.3), #fff);
    @include borderRadius();
  }

  i.icon-search {
    position: absolute;
    right: 12px;
    pointer-events: none;
    line-height: 36px;
    @include variable(color, rgba(var(--on-surface), 0.8), #fff);
  }
}

button {
  font-size: $bodySize;
  background: transparent;
  @include variable(color, rgba(var(--on-surface), 0.8), #fff);
  @include variable(border-color, rgba(var(--on-surface), 0.3), #fff);
  @include borderRadius();
  outline: 0;
  height: 36px;
  max-height: 36px;
  min-width: 38px;
  border-width: 1px;
  border-style: solid;
  padding-left: 12px;
  padding-right: 12px;
  cursor: pointer;
  display: inline-flex;
  align-items: center;

  &:hover {
    background-color: rgba(255, 255, 255, 0.2);
  }
}

.card {
  @include variable(background-color, var(--surface), #fff);
  overflow: hidden;

  border-width: 1px;
  border-style: solid;
  @include variable(border-color, rgba(var(--on-surface), 0.3), #fff);
  @include borderRadius();

  .row {
    @include variable(border-color, rgba(var(--on-surface), 0.3), #fff);
    border-style: solid;
    border-bottom-width: 1px;
    background-color: transparent;

    &:last-child {
      border-bottom-width: 0;
    }

    &.clickable {
      &:hover {
        background-color: rgba(255, 255, 255, 0.2);
      }
    }
  }
}

@-webkit-keyframes spinner {
  0% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

@keyframes spinner {
  0% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

i {
  &.icon {
    line-height: 1;

    &.text-xl {
      font-size: 100px;
    }
  }

  &.spin {
    animation-duration: 1s;
    animation-name: spinner;
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    &.ng-animate {
      animation: none 0s;
    }
  }
}

.max-w-1248 {
  max-width: 1248px;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

.max-w-936 {
  max-width: 936px;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

.max-w-624 {
  max-width: 624px;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
}

@media (min-width: $minMedium) {
  .max-w-1248, .max-w-936, .max-w-624 {
    padding-left: 40px;
    padding-right: 40px;
  }
}

@media (max-width: $maxSmall) {
  .max-w-1248, .max-w-936, .max-w-624 {
    padding-left: 16px;
    padding-right: 16px;
  }
}
